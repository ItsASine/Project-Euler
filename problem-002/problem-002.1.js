/*
 Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 By starting with 1 and 2, the first 10 terms will be:

 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

 By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 find the sum of the even-valued terms.
 */

/*
 Improvement: Move even check to initial fib sequence to reduce needed computations
 */

var evenFibNumbers = function () {
    var fibonacciNumbers = [0, 1];
    var evenFibonacciNumbers = [];
    var i = fibonacciNumbers.length;
    var currentNumber = fibonacciNumbers[i - 1];
    var max = 4000000;

    while (currentNumber < max) {
        fibonacciNumbers[i] = fibonacciNumbers[i - 2] + fibonacciNumbers[i - 1];

        if (fibonacciNumbers[i] % 2 == 0) {
            evenFibonacciNumbers.push(fibonacciNumbers[i]);
        }

        currentNumber = fibonacciNumbers[i];
        i++;
    }

    return evenFibonacciNumbers;
};

var euler2 = function () {
    var evenFibonacciNumbers = evenFibNumbers();
    var sum;

    sum = evenFibonacciNumbers.reduce(function (previousValue, currentValue) {
        return previousValue + currentValue;
    });

    console.log(sum);
};

var start = Date.now();
euler2();
console.log('Time elapsed: ' + (Date.now() - start) + 'ms');
